# #########################################################################
# # OSDU CUSTOM VALUES CONFIGURATION
# #########################################################################

# #########################################################################
# # OSDU CUSTOM VALUES CONFIGURATION
# #########################################################################

# locals {
#   osdu_custom_values = <<-EOT
# # OSDU Infra values
# airflow:
#   enabled: true
#   fullnameOverride: "airflow"
#   postgresql:
#     enabled: false
#   externalDatabase:
#     host: "postgresql-db" # FIX ME must be the same as postgresql.fullnameOverride (bug with linter)
#     user: "airflow_owner"
#     password: ""
#     database: "airflow"
#   rbac:
#     create: true
#   serviceaccount:
#     create: true
#   ingress:
#     enabled: false
#   auth:
#     password: ""
#     username: "admin"
#   dags:
#     existingConfigmap: "dags-config"
#   worker:
#     extraEnvVarsCM: "airflow-config"
#     extraEnvVarsSecret: "airflow-secret"
#     podAnnotations: {"sidecar.istio.io/inject": "false"}
#     automountServiceAccountToken: true
#   web:
#     extraEnvVarsCM: "airflow-config"
#     extraEnvVarsSecret: "airflow-secret"
#     resources:
#       requests:
#         cpu: 500m
#         memory: 1024Mi
#       limits:
#         cpu: 750m
#         memory: 1536Mi
#   scheduler:
#     extraEnvVarsCM: "airflow-config"
#     extraEnvVarsSecret: "airflow-secret"
#     resources:
#       requests:
#         cpu: 500m
#         memory: 512Mi
#       limits:
#         cpu: 750m
#         memory: 1024Mi

# istio:
#   gateway: service-gateway

# # FIXME: Remove other variables when all services are migrated to this ones
# global:
#   dataPartitionId: "osdu"
#   domain: ""
#   onPremEnabled: true
#   useHttps: false
#   limitsEnabled: true
#   logLevel: "ERROR"

# domain:
#   tls:
#     osduCredentialName: "osdu-ingress-tls"
#     minioCredentialName: "minio-ingress-tls"
#     s3CredentialName: "s3-ingress-tls"
#     keycloakCredentialName: "keycloak-ingress-tls"
#     airflowCredentialName: "airflow-ingress-tls"

# conf:
#   createSecrets: true
#   nameSuffix: ""

# minio:
#   mode: standalone
#   statefulset:
#     replicaCount: 1
#     drivesPerNode: 4
#   enabled: true
#   fullnameOverride: "minio"
#   auth:
#     rootUser: "minio"
#     rootPassword: ""
#   persistence:
#     enabled: false
#     size: 250Gi
#     mountPath: /bitnami/minio/data # FIXME: delete it after MinIO chart update
#   extraEnvVarsCM: "minio-config"
#   useInternalServerUrl: false

# rabbitmq:
#   enabled: true
#   fullnameOverride: "rabbitmq"
#   auth:
#     username: "rabbitmq"
#     password: ""
#   replicaCount: 1
#   loadDefinition:
#     enabled: true
#     existingSecret: "load-definition"
#   logs: "-"
#   configuration: |-
#     ## Username and password
#     ##
#     default_user = rabbitmq
#     ## Clustering
#     cluster_name = rabbitmq
#     cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
#     cluster_formation.k8s.host = kubernetes.default
#     cluster_formation.k8s.address_type = hostname
#     cluster_formation.k8s.service_name = rabbitmq-headless
#     cluster_formation.k8s.hostname_suffix = .rabbitmq-headless.default.svc.cluster.local
#     cluster_formation.node_cleanup.interval = 10
#     cluster_formation.node_cleanup.only_log_warning = true
#     cluster_partition_handling = autoheal
#     load_definitions = /app/load_definition.json
#     # queue master locator
#     queue_master_locator = min-masters
#     # enable guest user
#     loopback_users.guest = false
#     # log level setup
#     log.connection.level = error
#     log.default.level = error

# postgresql:
#   enabled: true
#   fullnameOverride: "postgresql-db"
#   global:
#     postgresql:
#       auth:
#         postgresPassword: ""
#         database: "postgres"
#   primary:
#     persistence:
#       enabled: false
#       size: 10Gi
#     resourcesPreset: "medium"

# elasticsearch:
#   enabled: true
#   fullnameOverride: "elasticsearch"
#   security:
#     enabled: true
#     elasticPassword: ""
#     tls:
#       autoGenerated: true
#   master:
#     fullnameOverride: "elasticsearch"
#     masterOnly: false
#     heapSize: 1024m
#     replicas: "1"
#     persistence:
#       size: 8Gi
#   coordinating:
#     replicas: "0"
#   data:
#     replicas: "1"
#     persistence:
#       size: 100Gi
#   ingest:
#     replicas: "0"

# keycloak:
#   enabled: false
#   fullnameOverride: "keycloak"
#   auth:
#     adminPassword: ""
#   service:
#     type: ClusterIP
#   postgresql:
#     enabled: false
#   externalDatabase:
#     existingSecret: "keycloak-database-secret"
#     existingSecretPasswordKey: "KEYCLOAK_DATABASE_PASSWORD"
#     existingSecretHostKey: "KEYCLOAK_DATABASE_HOST"
#     existingSecretPortKey: "KEYCLOAK_DATABASE_PORT"
#     existingSecretUserKey: "KEYCLOAK_DATABASE_USER"
#     existingSecretDatabaseKey: "KEYCLOAK_DATABASE_NAME"
#   # This value needs to be changed to "none" if http is used to open admin console (if useHttps: false domain.tls.enabled = false)
#   proxy: none

# bootstrap:
#   airflow:
#     dagImages:
#       csv_parser: "community.opengroup.org:5555/osdu/platform/data-flow/ingestion/csv-parser/csv-parser/gc-csv-parser:v0.27.0"
#       segy_to_zgy: "community.opengroup.org:5555/osdu/platform/data-flow/ingestion/segy-to-zgy-conversion/gc-segy-to-zgy:v0.27.2"
#       open_vds: "community.opengroup.org:5555/osdu/platform/domain-data-mgmt-services/seismic/open-vds/openvds-ingestion:3.4.5"
#       energistics: "community.opengroup.org:5555/osdu/platform/data-flow/ingestion/energistics/witsml-parser/gc-baremetal-energistics:v0.27.0"
#     # External Airflow
#     username: "" # user of the external airflow
#     password: "" # user's password of the external airflow
#   postgres:
#     external: false
#     cloudSqlConnection: ""
#     keycloak:
#       host: ""
#       port: "5432"
#       name: "keycloak"
#       user: "keycloak_owner"
#       password: ""
#     dataset:
#       host: ""
#       port: "5432"
#       name: "dataset"
#       user: "dataset"
#       password: ""
#     entitlements:
#       host: ""
#       port: "5432"
#       name: "entitlements"
#       user: "entitlements"
#       password: ""
#       schema: "entitlements_osdu_1"
#     file:
#       host: ""
#       port: "5432"
#       name: "file"
#       user: "file_owner"
#       password: ""
#     legal:
#       host: ""
#       port: "5432"
#       name: "legal"
#       user: "legal_owner"
#       password: ""
#     partition:
#       host: ""
#       port: "5432"
#       name: "partition"
#       user: "partition"
#       password: ""
#     register:
#       host: ""
#       port: "5432"
#       name: "register"
#       user: "register_owner"
#       password: ""
#     schema:
#       host: ""
#       port: "5432"
#       name: "schema"
#       user: "schema"
#       password: ""
#     seismic:
#       host: ""
#       port: "5432"
#       name: "seismic"
#       user: "seismic"
#       password: ""
#     storage:
#       host: ""
#       port: "5432"
#       name: "storage"
#       user: "storage_owner"
#       password: ""
#     well_delivery:
#       host: ""
#       port: "5432"
#       name: "well-delivery"
#       user: "well_delivery_owner"
#       password: ""
#     wellbore:
#       host: ""
#       port: "5432"
#       name: "wellbore"
#       user: "wellbore"
#       password: ""
#     workflow:
#       host: ""
#       port: "5432"
#       name: "workflow"
#       user: "workflow"
#       password: ""
#       system_namespace: ""
#     secret:
#       postgresqlUser: "postgres"
#       postgresqlPort: "5432"
#   elastic:
#     secret:
#       elasticHost: "" # This value is used if elastcisearch has been already installed
#       elasticPort: "9200"
#       elasticAdmin: "elastic"
#       elasticSearchUser: "search-service"
#       elasticIndexerUser: "indexer-service"
#     imagePullSecrets: []
#   minio:
#     external: false
#     console_url: "" # url for external minio
#     api_url: "" # url for external minio
#     policy:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     airflow:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     file:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     legal:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     storage:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     seismicStore:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#       bucket: "" # configuration from external minio
#     schema:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     wellbore:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#     dag:
#       user: "" # configuration from external minio
#       password: "" # configuration from external minio
#   keycloak:
#     secret:
#       keycloakService: "http://keycloak"
#       keycloakRealmName: "osdu"

# gc_baremetal_infra_bootstrap:
#   enabled: true

# rabbitmq_bootstrap:
#   enabled: true
#   data:
#     rabbitmqHost: "rabbitmq" # equals to rabbitmq.fullNameOverride
#     rabbitmqVhost: "/"
#     bootstrapServiceAccountName: "bootstrap-sa"

# gc_infra_bootstrap:
#   enabled: false
#   data:
#     projectId: ""
#     serviceAccountName: "infra-bootstrap"
#   airflow:
#     bucket: ""
#     environmentName: ""
#     location: ""
#     dagImages:
#       csv_parser: "community.opengroup.org:5555/osdu/platform/data-flow/ingestion/csv-parser/csv-parser/gc-csv-parser:v0.27.0"
#       segy_to_zgy: "community.opengroup.org:5555/osdu/platform/data-flow/ingestion/segy-to-zgy-conversion/gc-segy-to-zgy:v0.27.2"
#       open_vds: "community.opengroup.org:5555/osdu/platform/domain-data-mgmt-services/seismic/open-vds/openvds-ingestion:3.4.5"
#       energistics: "community.opengroup.org:5555/osdu/platform/data-flow/ingestion/energistics/witsml-parser/gc-energistics:v0.27.0"

# # OSDU Services values

# # --- Entitlements values --- #
# gc_entitlements_deploy:
#   enabled: true
#   data:
#     bootstrapServiceAccountName: "bootstrap-sa"
#     adminUserEmail: "osdu-admin@service.local"
#     airflowComposerEmail: "airflow@service.local"
# # --- End of Entitlements values --- #

# # --- Config values --- #
# gc_config_deploy:
#   enabled: true
# # --- End of Config values --- #

# # --- Crs-catalog values --- #
# gc-crs-catalog-deploy:
#   enabled: true
#   data:
#     serviceAccountName: "crs-catalog"

# # --- End of Crs-catalog values --- #

# # --- Dataset values --- #
# gc_dataset_deploy:
#   enabled: true
#   data:
#     serviceAccountName: "dataset"
#   conf:
#     postgresSecretName: "dataset-postgres-secret"
# # --- End of Dataset values --- #

# # --- Crs-conversion values --- #
# gc-crs-conversion-deploy:
#   enabled: true
# # --- End of Crs-conversion values --- #

# # --- Partition values --- #
# gc_partition_deploy:
#   enabled: true
#   data:
#     policyServiceEnabled: "true"
#     edsEnabled: "false"
#     autocompleteEnabled: "false"
#     minioExternalEndpoint: "" # use only if external minio is configured
# # --- End of Partition values --- #

# # --- Policy values --- #
# gc_policy_deploy:
#   enabled: true
#   data:
#     bucketName: "refi-opa-policies"
#     bootstrapServiceAccountName: "bootstrap-sa"
# # --- End of Policy values --- #

# # --- Storage values --- #
# gc_storage_deploy:
#   enabled: true
#   data:
#     bootstrapServiceAccountName: "bootstrap-sa"
#     # FIXME: remove before M25 release (branch release/0.28)
#     opaEnabled: true
# # --- End of Storage values --- #

# # --- Unit values --- #
# gc_unit_deploy:
#   enabled: true
# # --- End of Unit values --- #

# # --- Register values --- #
# gc_register_deploy:
#   enabled: true
#   data:
#     serviceAccountName: "register"
#   conf:
#     rabbitmqSecretName: "rabbitmq-secret"
#     registerPostgresSecretName: "register-postgres-secret"
#     registerKeycloakSecretName: "register-keycloak-secret"
# # --- End of Register values --- #

# # --- Notification values --- #
# gc_notification_deploy:
#   enabled: true
# # --- End of Notification values --- #

# # --- Well Delivery values --- #
# gc_well_delivery_deploy:
#   enabled: true
# # --- Well Delivery values --- #

# # --- Workflow values --- #
# gc_workflow_deploy:
#   enabled: true
#   data:
#     sharedTenantName: "osdu"
#     bootstrapServiceAccountName: "bootstrap-sa"
# # --- End of Workflow values --- #

# # --- File values --- #
# gc_file_deploy:
#   enabled: true
#   data:
#     serviceAccountName: "file"
# # --- End of File values --- #

# # --- Schema values --- #
# gc_schema_deploy:
#   enabled: true
#   data:
#     bootstrapServiceAccountName: "bootstrap-sa"
#   conf:
#     bootstrapSecretName: "datafier-secret"
#     minioSecretName: "schema-minio-secret"
#     postgresSecretName: "schema-postgres-secret"
#     rabbitmqSecretName: "rabbitmq-secret"
# # --- End of Schema values --- #

# # --- Search values --- #
# gc_search_deploy:
#   enabled: true
#   data:
#     # FIXME: remove before M25 release (branch release/0.28)
#     servicePolicyEnabled: true
# # --- End of Search values --- #

# # --- Seismic values --- #
# gc_seismic_store_sdms_deploy:
#   data:
#     redisDdmsHost: "redis-ddms"
#   enabled: true
# # --- End of Seismic values --- #

# # --- Indexer values --- #
# gc_indexer_deploy:
#   enabled: true
#   conf:
#     elasticSecretName: "indexer-elastic-secret"
#     keycloakSecretName: "indexer-keycloak-secret"
#     rabbitmqSecretName: "rabbitmq-secret"
# # --- End of Indexer values --- #

# # --- Legal values --- #
# # CImpl with GC modules
# gc_legal_deploy:
#   enabled: false

# # CImpl
# core_legal_deploy:
#   enabled: true
#   data:
#     cronJobServiceAccountName: "bootstrap-sa"
# # --- End of Legal values --- #

# # --- Wellbore values --- #
# gc_wellbore_deploy:
#   enabled: true
# # --- End of Wellbore values --- #

# # --- Wellbore Worker values --- #
# gc_wellbore_worker_deploy:
#   enabled: true
# # --- End of Wellbore Worker values --- #

# # --- Secret service values --- #
# gc_secret_deploy:
#   enabled: true
# # --- End of Secret service values --- #

# # --- EDS DMS values --- #
# gc_eds_dms_deploy:
#   enabled: true
# # --- End of EDS DMS values --- #

# # --- Open ETP client values --- #
# gc_oetp_client_deploy:
#   enabled: false
# # --- End of Open ETP client values --- #

# # --- Open ETP server values --- #
# gc_oetp_server_deploy:
#   enabled: false
# # --- End of Open ETP server values --- #

# # --- DFaaS tests values --- #
# dfaas_tests:
#   enabled: false
# # --- End of DFaaS tests values --- #

#   EOT
# }